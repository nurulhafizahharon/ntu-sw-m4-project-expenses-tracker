version: 2.1
orbs: # packages
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4 # allows us to use docker orb's commands
  snyk: snyk/snyk@1.5.0 # 3rd party orb of snyk
  # heroku: circleci/heroku@2.0.0
jobs: # instructions for each step
  build: # Build the application, ie install dependencies
    docker: # container to handle to steps
      - image: cimg/node:16.10
    steps:
      - checkout # copies the working directory of th project
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies..."
          npm install

  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm run test

  build-and-push:
    executor: docker/docker # State the environment that we're using
    steps:
      - setup_remote_docker #This allows use to run docker commands just in case
      - checkout
      - docker/check
      - docker/build:
          image: norulehapizah/project-space
          tag: <<pipeline.git.tag>>
      - docker/push:
          image: norulehapizah/project-space
          tag: <<pipeline.git.tag>>

  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: norulehapizah/project-space # The IMAGE_NAME is a variable we could use in ourjobs/steps
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME . #$IMAGE_NAME gets the value of the IMAGE_NAME from the environment defined above
      - snyk/scan:
          docker-image-name: $IMAGE_NAME
          severity-threshold: high

  # deploy:
  #   docker:
  #     - image: cimg/node:16.10
  #   steps:
  #     - setup_remote_docker
  #     - heroku/install #installs heroku cli for our run command
  #     - checkout
  #     - run:
  #         name: Heroku Container Push # the name of the group of commands we are running
  #         command: |
  #           heroku container:login
  #           heroku container:push web -a nurulhafizah-su-devops
  #           heroku container:release web -a nurulhafizah-su-devops
  #       # The push command pushes the image to heroku's container registry
  #       # The release command deploys the image from heroku's container registry

workflows: # defines how each job would run and relate to each other and any other dependent states (eg: only run if pushed to main branch)
  simple_workflow:
    jobs:
      - build:
          filters:
            branches:
              only: main

      - test:
          requires:
            - build
          filters:
            branches:
              only: main

      - build-and-push: # This should run only if a tag is pushed, not if a branch is pushed
          # requires:
          #   - test
          filters:
            tags:
              only: /^v.*/ #only considers tags starting with v (e.g: v1.0.2)
              # only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/ # ignores all branches

      - scan:
          requires:
            - build

      # - deploy:
      #     requires:
      #       - build-and-push
